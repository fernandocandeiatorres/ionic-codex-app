"use strict";
/*
 * @japa/api-client
 *
 * (c) Japa.dev
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.apiClient = exports.ApiResponse = exports.ApiRequest = exports.ApiClient = void 0;
const client_1 = require("./src/client");
Object.defineProperty(exports, "ApiClient", { enumerable: true, get: function () { return client_1.ApiClient; } });
__exportStar(require("./src/types"), exports);
var request_1 = require("./src/request");
Object.defineProperty(exports, "ApiRequest", { enumerable: true, get: function () { return request_1.ApiRequest; } });
var response_1 = require("./src/response");
Object.defineProperty(exports, "ApiResponse", { enumerable: true, get: function () { return response_1.ApiResponse; } });
/**
 * API client plugin registers an HTTP request client that
 * can be used for testing API endpoints.
 */
function apiClient(options) {
    return function (_, __, { TestContext }) {
        TestContext.getter('client', function () {
            return new client_1.ApiClient(typeof options === 'string' ? options : options?.baseURL, this.assert);
        }, true);
    };
}
exports.apiClient = apiClient;
