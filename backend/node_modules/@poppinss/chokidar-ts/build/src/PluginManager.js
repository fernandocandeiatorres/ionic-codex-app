"use strict";
/*
 * @poppinss/chokidar-ts
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PluginManager = void 0;
/**
 * Exposes the API to register plugins and get typescript compiler
 * transformers
 */
class PluginManager {
    constructor() {
        this.plugins = [];
    }
    /**
     * Hook plugin to define custom transformers
     */
    use(transformer, lifecycle) {
        this.plugins.push({ fn: transformer, lifecycle });
        return this;
    }
    /**
     * Returns transformers based upon the registered plugins
     */
    getTransformers(ts, options) {
        return this.plugins.reduce((transformers, { fn, lifecycle }) => {
            if (lifecycle === 'after') {
                transformers.after.push(fn(ts, options));
            }
            else {
                transformers.before.push(fn(ts, options));
            }
            return transformers;
        }, { before: [], after: [] });
    }
}
exports.PluginManager = PluginManager;
