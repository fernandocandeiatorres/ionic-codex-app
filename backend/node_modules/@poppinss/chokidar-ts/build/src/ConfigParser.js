"use strict";
/*
 * @poppinss/chokidar-ts
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigParser = void 0;
const debug_1 = __importDefault(require("debug"));
const path_1 = require("path");
const debug = (0, debug_1.default)('tsc:config:parser');
/**
 * Exposes the API to parse typescript config
 */
class ConfigParser {
    constructor(cwd, configFileName, ts) {
        this.cwd = cwd;
        this.configFileName = configFileName;
        this.ts = ts;
        debug('parsing config file "%s"', this.configFileName);
    }
    /**
     * Parses the typescript config file
     */
    parse(optionsToExtend) {
        let hardException = null;
        const parsedConfig = this.ts.getParsedCommandLineOfConfigFile((0, path_1.join)(this.cwd, this.configFileName), optionsToExtend || {}, {
            ...this.ts.sys,
            useCaseSensitiveFileNames: true,
            getCurrentDirectory: () => this.cwd,
            onUnRecoverableConfigFileDiagnostic: (error) => (hardException = error),
        });
        return { config: parsedConfig, error: hardException };
    }
}
exports.ConfigParser = ConfigParser;
